{"ast":null,"code":"var _jsxFileName = \"/Users/claudiaromeo/Documents/Projects/covid-data/src/views/data/TableData.jsx\";\nimport React from 'react';\nimport { Table, Container, Segment, Pagination } from 'semantic-ui-react';\nimport { properties } from '../../properties/properties.js';\n\nclass TableData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageChanges = (e, {\n      activePage\n    }) => this.setState({\n      activePage: activePage,\n      firstItem: (activePage - 1) * this.state.rowsPerPage,\n      lastItem: activePage * this.state.rowsPerPage - 1\n    });\n\n    this.state = {\n      columns: [{\n        id: 'country',\n        label: 'Country',\n        minWidth: 170\n      }, {\n        id: 'cases',\n        label: 'Cases',\n        minWidth: 100\n      }, {\n        id: 'todayCases',\n        label: 'Today Cases'\n      }, {\n        id: 'deaths',\n        label: 'Deaths'\n      }, {\n        id: 'todayDeaths',\n        label: 'Today Deaths'\n      }, {\n        id: 'recovered',\n        label: 'Recovered'\n      }, {\n        id: 'active',\n        label: 'Active'\n      }, {\n        id: 'critical',\n        label: 'Critical'\n      }],\n      rowsPerPage: properties.numberOfRows,\n      firstItem: 0,\n      lastItem: properties.numberOfRows - 1,\n      totalPages: 0,\n      data: this.props.data,\n      activePage: 1\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.data !== null && nextProps.data.length !== 0) {\n      this.setState({\n        data: nextProps.data,\n        totalPages: Math.floor(nextProps.data.length / this.state.rowsPerPage) + 1\n      });\n    }\n  }\n\n  render() {\n    const {\n      columns,\n      data,\n      totalPages,\n      firstItem,\n      lastItem\n    } = this.state;\n    const tempData = data.slice(firstItem, lastItem + 1);\n    return React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      selectable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, columns.map(column => React.createElement(Table.HeaderCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, column.label)))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, tempData.map((i, index) => {\n      return React.createElement(Table.Row, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, i.country), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, i.cases), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, i.todayCases), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, i.deaths), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, i.todayDeaths), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, i.recovered), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, i.active), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, i.critical));\n    })), React.createElement(Table.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      colSpan: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      pointing: true,\n      secondary: true,\n      defaultActivePage: this.state.activePage,\n      totalPages: totalPages,\n      boundaryRange: 2,\n      onPageChange: this.handlePageChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default TableData;","map":{"version":3,"sources":["/Users/claudiaromeo/Documents/Projects/covid-data/src/views/data/TableData.jsx"],"names":["React","Table","Container","Segment","Pagination","properties","TableData","Component","constructor","props","handlePageChanges","e","activePage","setState","firstItem","state","rowsPerPage","lastItem","columns","id","label","minWidth","numberOfRows","totalPages","data","UNSAFE_componentWillReceiveProps","nextProps","length","Math","floor","render","tempData","slice","map","column","align","i","index","country","cases","todayCases","deaths","todayDeaths","recovered","active","critical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Container, Segment, Pagination } from 'semantic-ui-react';\nimport { properties } from '../../properties/properties.js'\n\nclass TableData extends React.Component {\n\n    constructor(props){\n      super(props)\n      this.state = {\n        columns: [\n          { id: 'country', label: 'Country', minWidth: 170 },\n          { id: 'cases', label: 'Cases', minWidth: 100 },\n          { id: 'todayCases', label: 'Today Cases'},\n          { id: 'deaths', label: 'Deaths' },\n          { id: 'todayDeaths', label: 'Today Deaths' },\n          { id: 'recovered', label: 'Recovered'},\n          { id: 'active', label: 'Active'},\n          { id: 'critical', label: 'Critical'}\n      ],\n        rowsPerPage: properties.numberOfRows,\n        firstItem: 0,\n        lastItem: properties.numberOfRows - 1,\n        totalPages: 0,\n        data: this.props.data,\n        activePage: 1\n      }  \n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n      if(nextProps.data !== null && nextProps.data.length !== 0){\n        this.setState({\n          data: nextProps.data,\n          totalPages: Math.floor(nextProps.data.length/this.state.rowsPerPage)+1\n        })\n      }\n    }\n\n    handlePageChanges = (e, { activePage }) => \n          this.setState({ \n            activePage: activePage,  \n            firstItem: (activePage-1)*this.state.rowsPerPage,\n            lastItem: activePage*this.state.rowsPerPage-1\n          })\n\n    render(){\n\n      const { columns, data, totalPages, firstItem, lastItem } = this.state\n      const tempData = data.slice(firstItem, lastItem+1)\n\n        return(\n      <Segment>\n      <Container>\n        <Table striped selectable>\n          <Table.Header>\n            <Table.Row>\n              {columns.map(column => (\n                <Table.HeaderCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </Table.HeaderCell>\n              ))}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            { tempData.map((i, index) => {\n              return(\n                <Table.Row key={index}>\n                  <Table.Cell>{i.country}</Table.Cell>\n                  <Table.Cell>{i.cases}</Table.Cell>\n                  <Table.Cell>{i.todayCases}</Table.Cell>\n                  <Table.Cell>{i.deaths}</Table.Cell>\n                  <Table.Cell>{i.todayDeaths}</Table.Cell>\n                  <Table.Cell>{i.recovered}</Table.Cell>\n                  <Table.Cell>{i.active}</Table.Cell>\n                  <Table.Cell>{i.critical}</Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>\n\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan={8}>\n                <Pagination \n                pointing\n                secondary\n                defaultActivePage={this.state.activePage} \n                totalPages={totalPages} \n                boundaryRange={2}\n                onPageChange={this.handlePageChanges}\n                />\n              </Table.HeaderCell>\n            </Table.Row>\n      </Table.Footer>\n        </Table>\n      </Container>\n    </Segment>\n        )\n    }\n}\n\n\nexport default TableData;"]},"metadata":{},"sourceType":"module"}
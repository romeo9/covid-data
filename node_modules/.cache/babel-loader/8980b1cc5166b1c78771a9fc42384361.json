{"ast":null,"code":"var _jsxFileName = \"/Users/claudiaromeo/Documents/Projects/covid-data/src/views/data/AllCountry.jsx\";\nimport React from 'react';\nimport { Container, Statistic, Header, Icon, Segment } from 'semantic-ui-react';\n\nclass AllCountry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cases: 0,\n      deaths: 0,\n      recovered: 0\n    };\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    const cases = this.props.data.length !== 0 && this.props.data.flatMap(i => i.cases).reduce((a, b) => a + b);\n    const deaths = this.props.data.length !== 0 && this.props.data.flatMap(i => i.deaths).reduce((a, b) => a + b);\n    const recovered = this.props.data.length !== 0 && this.props.data.flatMap(i => i.recovered).reduce((a, b) => a + b);\n    return React.createElement(Segment, {\n      style: {\n        paddingTop: '3.2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      icon: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"world\",\n      size: \"tiny\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), \"Total World's Data\", React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Sum of Infection data\")), React.createElement(Statistic.Group, {\n      widths: 3,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Statistic, {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.numberWithCommas(cases)), React.createElement(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Cases\")), React.createElement(Statistic, {\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.numberWithCommas(deaths)), React.createElement(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Deaths\")), React.createElement(Statistic, {\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.numberWithCommas(recovered)), React.createElement(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Recovered\")))));\n  }\n\n}\n\nexport default AllCountry;","map":{"version":3,"sources":["/Users/claudiaromeo/Documents/Projects/covid-data/src/views/data/AllCountry.jsx"],"names":["React","Container","Statistic","Header","Icon","Segment","AllCountry","Component","constructor","props","state","cases","deaths","recovered","numberWithCommas","x","toString","replace","render","data","length","flatMap","i","reduce","a","b","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,OAA7C,QAA2D,mBAA3D;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CADE;AAETC,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAMH;;AAEDC,EAAAA,gBAAgB,CAACC,CAAD,EAAI;AAChB,WAAOA,CAAC,CAACC,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,UAAMP,KAAK,GAAG,KAAKF,KAAL,CAAWU,IAAX,CAAgBC,MAAhB,KAAyB,CAAzB,IAA8B,KAAKX,KAAL,CAAWU,IAAX,CAAgBE,OAAhB,CAAwBC,CAAC,IAAIA,CAAC,CAACX,KAA/B,EAAsCY,MAAtC,CAA6C,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAACC,CAAxD,CAA5C;AACA,UAAMb,MAAM,GAAG,KAAKH,KAAL,CAAWU,IAAX,CAAgBC,MAAhB,KAAyB,CAAzB,IAA8B,KAAKX,KAAL,CAAWU,IAAX,CAAgBE,OAAhB,CAAwBC,CAAC,IAAIA,CAAC,CAACV,MAA/B,EAAuCW,MAAvC,CAA8C,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAACC,CAAzD,CAA7C;AACA,UAAMZ,SAAS,GAAG,KAAKJ,KAAL,CAAWU,IAAX,CAAgBC,MAAhB,KAAyB,CAAzB,IAA8B,KAAKX,KAAL,CAAWU,IAAX,CAAgBE,OAAhB,CAAwBC,CAAC,IAAIA,CAAC,CAACT,SAA/B,EAA0CU,MAA1C,CAAiD,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAACC,CAA5D,CAAhD;AAEA,WACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,IAAI,MAApB;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,wBAGI,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHJ,CADJ,EAQI,oBAAC,SAAD,CAAW,KAAX;AAAiB,MAAA,MAAM,EAAE,CAAzB;AAA4B,MAAA,IAAI,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB,KAAKZ,gBAAL,CAAsBH,KAAtB,CAAlB,CADJ,EAEI,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,EAKI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB,KAAKG,gBAAL,CAAsBF,MAAtB,CAAlB,CADJ,EAEI,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CALJ,EASI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB,KAAKE,gBAAL,CAAsBD,SAAtB,CAAlB,CADJ,EAEI,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CATJ,CARJ,CADJ,CADJ;AA2BH;;AAjDoC;;AAoDzC,eAAeP,UAAf","sourcesContent":["import React from 'react';\nimport { Container, Statistic, Header, Icon, Segment} from 'semantic-ui-react';\n\nclass AllCountry extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            cases: 0,\n            deaths: 0,\n            recovered: 0\n        }\n\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    render(){\n\n        const cases = this.props.data.length!==0 && this.props.data.flatMap(i => i.cases).reduce((a,b) => a+b)\n        const deaths = this.props.data.length!==0 && this.props.data.flatMap(i => i.deaths).reduce((a,b) => a+b)\n        const recovered = this.props.data.length!==0 && this.props.data.flatMap(i => i.recovered).reduce((a,b) => a+b)\n\n        return(\n            <Segment style={{paddingTop: '3.2em'}}>\n                <Container fluid textAlign='center'>\n                    <Header as='h2' icon size='medium'>\n                        <Icon name='world' size='tiny' />\n                                Total World's Data\n                        <Header.Subheader>\n                            Sum of Infection data\n                        </Header.Subheader>\n                    </Header>\n                    <Statistic.Group widths={3} size='small'>\n                        <Statistic color='red'>\n                            <Statistic.Value>{this.numberWithCommas(cases)}</Statistic.Value>\n                            <Statistic.Label>Cases</Statistic.Label>\n                        </Statistic>\n                        <Statistic color='black'>\n                            <Statistic.Value>{this.numberWithCommas(deaths)}</Statistic.Value>\n                            <Statistic.Label>Deaths</Statistic.Label>\n                        </Statistic>\n                        <Statistic color='green'>\n                            <Statistic.Value>{this.numberWithCommas(recovered)}</Statistic.Value>\n                            <Statistic.Label>Recovered</Statistic.Label>\n                        </Statistic>\n                    </Statistic.Group>\n                </Container>\n            </Segment>\n        )\n    }\n}\n\nexport default AllCountry;"]},"metadata":{},"sourceType":"module"}
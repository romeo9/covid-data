{"ast":null,"code":"var _jsxFileName = \"/Users/claudiaromeo/Documents/Projects/covid-data/src/views/data/ItalyData.jsx\";\nimport React from 'react';\nimport { Container, Statistic, Header, Segment } from 'semantic-ui-react';\nimport italy from '../../icons/italy.png';\n\nclass ItalyData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cases: 0,\n      deaths: 0,\n      recovered: 0\n    };\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    const cases = this.props.data.length !== 0 && this.props.data.filter(i => i.country === \"Italy\")[0].cases;\n    const deaths = this.props.data.length !== 0 && this.props.data.filter(i => i.country === \"Italy\")[0].deaths;\n    const recovered = this.props.data.length !== 0 && this.props.data.filter(i => i.country === \"Italy\")[0].recovered;\n    return React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      icon: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: italy,\n      className: \"icon-italy\",\n      alt: \"Italy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), \"Italy Data\", React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Sum of Infection data of Italy\")), React.createElement(Statistic.Group, {\n      widths: 3,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Statistic, {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.numberWithCommas(cases)), React.createElement(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Cases\")), React.createElement(Statistic, {\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.numberWithCommas(deaths)), React.createElement(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Deaths\")), React.createElement(Statistic, {\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.numberWithCommas(recovered)), React.createElement(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Recovered\")))));\n  }\n\n}\n\nexport default ItalyData;","map":{"version":3,"sources":["/Users/claudiaromeo/Documents/Projects/covid-data/src/views/data/ItalyData.jsx"],"names":["React","Container","Statistic","Header","Segment","italy","ItalyData","Component","constructor","props","state","cases","deaths","recovered","numberWithCommas","x","toString","replace","render","data","length","filter","i","country"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Statistic, Header, Segment } from 'semantic-ui-react';\nimport italy from '../../icons/italy.png'\n\nclass ItalyData extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            cases: 0,\n            deaths: 0,\n            recovered: 0\n        }\n\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    render(){\n\n        const cases = this.props.data.length!==0 && this.props.data.filter(i => i.country===\"Italy\")[0].cases\n        const deaths = this.props.data.length!==0 && this.props.data.filter(i => i.country===\"Italy\")[0].deaths\n        const recovered = this.props.data.length!==0 && this.props.data.filter(i => i.country===\"Italy\")[0].recovered\n\n        return(\n            <Segment >\n                <Container fluid>\n                    <Header as='h2' icon size='medium'>\n                        <img src={italy} className='icon-italy' alt='Italy'/>\n                            Italy Data\n                        <Header.Subheader>\n                            Sum of Infection data of Italy\n                        </Header.Subheader>\n                    </Header>\n                    <Statistic.Group widths={3} size='small' >\n                        <Statistic  color='red'>\n                            <Statistic.Value>{this.numberWithCommas(cases)}</Statistic.Value>\n                            <Statistic.Label>Cases</Statistic.Label>\n                        </Statistic>\n                        <Statistic  color='black'>\n                            <Statistic.Value>{this.numberWithCommas(deaths)}</Statistic.Value>\n                            <Statistic.Label>Deaths</Statistic.Label>\n                        </Statistic>\n                        <Statistic  color='green'>\n                            <Statistic.Value>{this.numberWithCommas(recovered)}</Statistic.Value>\n                            <Statistic.Label>Recovered</Statistic.Label>\n                        </Statistic>\n                    </Statistic.Group>\n                </Container>\n            </Segment>\n        )\n    }\n}\n\nexport default ItalyData;"]},"metadata":{},"sourceType":"module"}